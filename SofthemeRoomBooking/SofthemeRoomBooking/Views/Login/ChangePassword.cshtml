@model SofthemeRoomBooking.Models.ForgotPasswordViewModel
@{
    ViewBag.Title = "Change Password";
    ViewBag.ChangePassword = true;
    Layout = "~/Views/Login/_Layout.cshtml";
}

@*<form id="change-password-send-email" action="" class="compl-background__form form">
    <div class="form__label">Смена пароля</div>
    <div class="form__process">
        <p class="form__text">Отправить запрос о смене пароля</p>
        <input class="input-text form__text-input form__text-input-last" type="text" placeholder="Email">
        <button class="button  form__button" type="submit">Отправить</button>
    </div>
    <div class="form__success hidden">
        <p class="form__text">
            На указанный адрес электронной почты
            успешно отправлено письмо с
            инструкцией по смене пароля
        </p>
    </div>
</form>*@
@using (Html.BeginForm("ForgotPassword", "Account", FormMethod.Post, new { @class = "compl-background__form form", enctype = "multipart/form-data" }))
{
    <div class="form__label">Вход</div>
    if (ViewBag.InvalidCredentials != null)
    {
        @Html.BigInvalidMessage("Неверные данные", new { @class = "error-box__text-danger" })
    }
    @Html.AntiForgeryToken()
    <p class="form__text form__row">Отправить запрос о смене пароля</p>
    <div class="group-input-error">
        @Html.SignalValidationMessageFor(model => model.Email, new { @class = "error-box__text-danger" })
        @Html.EditorFor(model => model.Email, new
        {
            htmlAttributes = new
            {
                @class = "input-text form__text-input form__text-input-last",
                placeholder = "Адрес электронной почты"
            }
        })
    </div>
    <button class="button  form__button" type="submit">Войти</button>
}
